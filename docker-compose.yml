services:
  # 1. データベース (MySQL)
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app_db}
      MYSQL_USER: ${MYSQL_USER:-user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    ports:
      - "${DB_PORT:-3306}:3306" # ✅ 環境変数でポート設定
    volumes:
      - db-data:/var/lib/mysql

  # 2. バックエンド (Python)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: python_backend
    restart: always
    ports:
      - "${BACKEND_PORT:-8000}:8000" # ✅ 動的ポート設定
    volumes:
      - ./backend/src:/app
    environment:
      - DATABASE_URL=${DATABASE_URL:-mysql+pymysql://user:password@db/app_db}
      - DEBUG=${DEBUG:-True}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - API_PORT=${BACKEND_PORT:-8000} # ✅ バックエンドポートを環境変数として渡す
    depends_on:
      - db

  # 3. フロントエンド (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: ${FRONTEND_DOCKERFILE:-Dockerfile} # ✅ 動的Dockerfile指定
      args:
        - PORT=${FRONTEND_PORT:-3000} # ✅ ビルド引数としてポートを渡す
    container_name: nextjs_frontend
    restart: always
    ports:
      - "${FRONTEND_PORT:-3000}:3000" # ✅ 動的ポート設定
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    stdin_open: true
    tty: true
    environment:
      - WATCHPACK_POLLING=true
      - NEXT_TELEMETRY_DISABLED=1
      - NODE_ENV=${NODE_ENV:-development}
      # ✅ ポート番号から動的にAPI URLを構築
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_API_INTERNAL_URL=${NEXT_PUBLIC_API_INTERNAL_URL}
      - NEXT_PUBLIC_FRONTEND_PORT=${FRONTEND_PORT:-3000}
      - NEXT_PUBLIC_BACKEND_PORT=${BACKEND_PORT:-8000}
    depends_on:
      - backend

volumes:
  db-data:
